
name: 'Godot Android Export'
description: 'Godot Engine 3.x and 4.x Android export'
author: 'Simon Dalvai @dulvui'
branding:
  color: blue
  icon: upload-cloud

inputs:
  working-directory:
    description: 'The working directory'
    required: false
    default: '.'
  godot-version:
    description: 'Godot Engine version. Supported are 4.x versions'
    required: true
  godot-channel:
    description: 'Godot Engine release channel (stable, beta, rc1, rc2, rc3...). Defaults to stable'
    required: false
    default: 'stable'

runs:
  using: "composite"
  steps:
    - name: Check is running on Linux
      if: runner.os != 'Linux'
      shell: bash
      run: exit 1

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Godot files
      id: cache-godot
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/bin/godot
        key: ${{ runner.os }}-godot-${{ inputs.godot-version }}

    - name: Download and extract Godot Engine linux server
      shell: bash
      if: steps.cache-godot.outputs.cache-hit != 'true'
      run: |
        wget -q https://github.com/godotengine/godot-builds/releases/download/${{ inputs.godot-version }}-${{ inputs.godot-channel}}/Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_linux.x86_64.zip
        unzip Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_linux.x86_64.zip
        mkdir -p ~/.config/godot/
        touch ~/.config/godot/editor_settings-4.tres
        mv ./Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_linux.x86_64 /usr/local/bin/godot

    - name: Check if android custom build directory exists
      id: check-custom-build
      run: |
        if [ -d "${{ inputs.working-directory }}/android" ]; then
          echo "exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Cache Godot export templates
      id: cache-export-templates
      if: steps.check-custom-build.outputs.exists == 'false'
      uses: actions/cache@v4
      with:
        path: ~/.local/share/godot/**
        key: ${{ runner.os }}-godot-${{ inputs.godot-version }}-export-templates

    - name: Download and extract templates
      shell: bash
      if: steps.check-custom-build.outputs.exists != 'true' && steps.cache-export-templates.outputs.cache-hit != 'true'
      run: |
        wget -q https://github.com/godotengine/godot-builds/releases/download/${{ inputs.godot-version }}-${{ inputs.godot-channel}}/Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_export_templates.tpz
        unzip Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_export_templates.tpz
        mkdir -p ~/.local/share/godot/export_templates/${{ inputs.godot-version }}.${{ inputs.godot-channel }}
        mv templates/* ~/.local/share/godot/export_templates/${{ inputs.godot-version }}.${{ inputs.godot-channel }}
        rm -f Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_linux.x86_64.zip Godot_v${{ inputs.godot-version }}-${{ inputs.godot-channel }}_export_templates.tpz

    - name: Set Android SDK path in Godot Editor settings
      shell: bash
      env:
        SETTINGS: |
          [gd_resource type="EditorSettings" format=3]

          [resource]
          export/android/android_sdk_path = "/usr/local/lib/android/sdk"
          export/android/shutdown_adb_on_exit = true
          export/android/force_system_user = false
          export/android/debug_keystore = "${{ github.action_path }}/debug.keystore"
          export/android/debug_keystore_user = "androiddebugkey"
          export/android/debug_keystore_pass = "android"
      run: echo $SETTINGS >> ~/.config/godot/editor_settings-4.tres

    - name: Install Android build template
      shell: bash
      if: steps.check-custom-build.outputs.exists != 'true'
      run: |
        mkdir -p ${{ inputs.working-directory }}/android/plugins
        mkdir -p ${{ inputs.working-directory }}/android/build
        touch ${{ inputs.working-directory }}/android/build/.gdignore
        echo ${{ inputs.godot-version }}.stable >> ${{ inputs.working-directory }}/android/.build_version
        unzip ~/.local/share/godot/export_templates/${{ inputs.godot-version }}.stable/android_source.zip  -d ${{ inputs.working-directory }}/android/build

    - name: Open project once to import assets in editor mode
      shell: bash
      continue-on-error: true # timeout will exit with code 124
      run: timeout 25 godot --headless --path ${{ inputs.working-directory }} -e

    - name: Export
      shell: bash
      run: godot --headless --path ${{ inputs.working-directory }} --export-release Android

